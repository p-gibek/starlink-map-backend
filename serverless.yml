service: starlink-map-backend

frameworkVersion: ">=2.21.1"

provider:
  name: aws
  runtime: nodejs12.x
  memorySize: 128
  region: eu-west-1
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    SPACE_TRACK_USERNAME: ""
    SPACE_TRACK_PASSWORD: ""
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

  lambdaHashingVersion: "20201221"
  apiGateway:
    shouldStartNameWithService: true

package:
  exclude:
    - .idea/**
    - src/**
    - .prettierrc.json
    - tsconfig.json
    - tslint.json
    - "**/*.ts"
    - "**/*.md"

functions:
  list-satellites:
    handler: dist/satellites/list-satellites.ListSatellitesHandler
    events:
      - http:
          path: satellites
          method: get
          cors: true
  fetch-satcat-data:
    handler: dist/satellites/fetch-satcat-data.FetchSATCATData
    memorySize: 256
    timeout: 120

resources:
  Resources:
    SatellitesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: noradCatID
            AttributeType: S
        KeySchema:
          -
            AttributeName: noradCatID
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
